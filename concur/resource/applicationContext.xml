<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:annotation-config />

	<!-- 下面是一些全局配置 -->
	
	<context:component-scan base-package="dbcache"></context:component-scan>

	<context:property-placeholder location="classpath:jdbc.properties"/>

	<!-- BDCP Make u crazy on multi-thread-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}"
		p:validationQuery="select ''" p:timeBetweenEvictionRunsMillis="5000"
		p:numTestsPerEvictionRun="10" p:testOnBorrow="false" p:testWhileIdle="false"
		p:initialSize="10" p:maxActive="4000" p:maxIdle="50" p:minIdle="15" />
	

	<!-- C3P0 
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="maxPoolSize" value="1000"/>
        <property name="minPoolSize" value="25"/>
        <property name="idleConnectionTestPeriod" value="30"/>
        <property name="acquireIncrement" value="8"/>
        <property name="properties">
            <props>
                <prop key="user">${jdbc.username}</prop>
                <prop key="password">${jdbc.password}</prop>
            </props>
        </property>
    </bean>
		
-->

	<!-- Hibernate SessionFactory -->	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="dbcache"/>
        <property name="hibernateProperties">
        	<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				
				<prop key="hibernate.hbm2ddl.auto">update</prop>
						
			</props>
        </property>
    </bean>

	<!--&lt;!&ndash; Transaction manager for a single Hibernate SessionFactory (alternative to JTA) &ndash;&gt;-->
	<!--<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"-->
			<!--p:sessionFactory-ref="sessionFactory"/>-->
	
	
	<!--&lt;!&ndash; JDBC模版 &ndash;&gt;-->
	<!--<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
		<!--<property name="dataSource">-->
			<!--<ref bean="dataSource" />-->
		<!--</property>-->
	<!--</bean>-->

	<!--
		Instruct Spring to perform declarative transaction management
		automatically on annotated classes.
	-->
	<tx:annotation-driven/>
	
	<!-- Enable @AspectJ support -->
    <aop:aspectj-autoproxy/>


	<!--<aop:config>-->
		<!--<aop:advisor id="tx" advice-ref="txAdvice"-->
			<!--pointcut="execution(* com..service..*Manager.*(..))" order="2" />-->
	<!--</aop:config>-->

	<!--<tx:advice id="txAdvice">-->
		<!--<tx:attributes>-->
			<!--<tx:method name="*" read-only="false" propagation="REQUIRED" rollback-for="Throwable"/>-->
			<!--<tx:method name="get*" read-only="true" propagation="SUPPORTS" />-->
			<!--<tx:method name="is*" read-only="true"  propagation="SUPPORTS"/>-->
			<!--<tx:method name="list*" read-only="true"  propagation="SUPPORTS"/>-->
		<!--</tx:attributes>-->
	<!--</tx:advice>-->
	
	
</beans>
